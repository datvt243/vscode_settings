{
  // --------------------------------------
  //
  // --------------------------------------
  "editor.wordWrap": "on",
  "editor.tabSize": 2,
  "editor.fontSize": 13,
  "editor.cursorBlinking": "phase",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.renderWhitespace": "all",
  "editor.linkedEditing": true,
  "editor.lineNumbers": "relative",
  "editor.detectIndentation": false, // Không tự động phát hiện indentation từ file, giữ nguyên giá trị tabSize.
  "editor.showFoldingControls": "always", // biểu tượng thu gọn/mở rộng code (> bên lề trái).
  "editor.minimap.enabled": false, // ẨN mini-map
  "editor.multiCursorModifier": "ctrlCmd", // Cho phép sử dụng Ctrl (Windows/Linux) hoặc Cmd (macOS) để thêm nhiều con trỏ (multi-cursor).
  "editor.cursorStyle": "line", // Đổi con trỏ sang dạng khối (block) thay vì kiểu gạch đứng (line) mặc định.
  "editor.stickyScroll.enabled": false, // Tắt Sticky Scroll, không hiển thị tiêu đề function/class khi cuộn code.
  "editor.guides.indentation": true,
  "editor.wordWrapColumn": 160,
  "editor.fontFamily": "FiraCode Nerd Font Mono, Menlo, Monaco, 'Courier New', monospac",
  "editor.suggestFontSize": 14, // font size ô gợi ý code

  "settingsSync.ignoredExtensions": [],

  // --------------------------------------
  // BREADCRUMBS
  // --------------------------------------
  "breadcrumbs.enabled": false,

  // --------------------------------------
  // WINDOW
  // --------------------------------------
  "window.commandCenter": false,
  "window.newWindowDimensions": "default", // Kích thước cửa sổ khi mở VSCode

  // --------------------------------------
  // CHAT
  // --------------------------------------
  "chat.commandCenter.enabled": false,

  // --------------------------------------
  // TERMINAL
  // --------------------------------------
  "terminal.integrated.fontFamily": "FiraCode Nerd Font Mono",
  "terminal.integrated.fontSize": 13,
  "terminal.integrated.defaultProfile.windows": "Git Bash",

  // --------------------------------------
  // FILES
  // --------------------------------------
  "files.autoSave": "onFocusChange",
  "files.eol": "\n", // Xác định kiểu ký tự kết thúc dòng (End Of Line - EOL) khi lưu file.
  "files.trimTrailingWhitespace": false, // Tự động xóa khoảng trắng dư thừa ở cuối dòng khi lưu file.
  "files.insertFinalNewline": true, // Thêm một dòng trống cuối file khi lưu.

  // --------------------------------------
  // ZEN MODE
  // --------------------------------------
  "zenMode.hideLineNumbers": false,
  "zenMode.hideStatusBar": false,
  "zenMode.fullScreen": true,

  // --------------------------------------
  // WORKBENCH
  // --------------------------------------
  "workbench.colorTheme": "React Theme", // Theme
  "workbench.productIconTheme": "developer-icons",
  "workbench.sideBar.location": "right",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.editor.showTabs": "single", // StatusBar -  thanh dưới cùng
  "workbench.startupEditor": "none", // Khi mở vscode, không hiển thị welcome or any file
  "workbench.tips.enabled": false, // Tắt gợi ý mẹo
  "workbench.tree.enableStickyScroll": false, // Chế độ Sticky Scroll trong cây thư mục (tính năng hiển thị dòng tiêu đề ở trên cùng khi cuộn).
  "workbench.tree.renderIndentGuides": "always", // Hiển thị đường kẻ dọc giúp căn chỉnh cấp bậc thư mục.
  "workbench.tree.indent": 16,
  "workbench.layoutControl.enabled": false,
  "workbench.navigationControl.enabled": false,

  // --------------------------------------
  // MATERIAL ICON THEME
  // --------------------------------------
  "material-icon-theme.hidesExplorerArrows": true, // Ẩn mủi tên xuống
  "material-icon-theme.files.color": "#42a5f5",

  // --------------------------------------
  // EXPLORER
  // --------------------------------------
  "explorer.compactFolders": false, // Tính năng gom nhóm các thư mục con vào một dòng nếu chỉ có một thư mục con duy nhất.
  "explorer.confirmDragAndDrop": true, // Hộp thoại xác nhận khi kéo thả file/thư mục.
  "explorer.confirmDelete": false, // Hộp thoại xác nhận khi xóa file/thư mục.
  "explorer.decorations.badges": true, // Hiển thị dấu hiệu (badges) trên file/thư mục (ví dụ: dấu hiệu Git thay đổi, lỗi, v.v.).
  "git.decorations.enabled": true, // Các ký hiệu của Git trong Explorer (ví dụ: chữ “M” màu vàng cho file bị sửa đổi).

  // --------------------------------------
  // TAILWIND CSS
  // --------------------------------------
  "tailwindCSS.emmetCompletions": true,

  // --------------------------------------
  // GITLENS
  // --------------------------------------
  "gitlens.launchpad.indicator.enabled": false,
  "gitlens.graph.statusBar.enabled": false,
  "gitlens.advanced.messages": {
    "suppressGitMissingWarning": true
  },

  // --------------------------------------
  // [TYPESCRIPT]
  // --------------------------------------
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // --------------------------------------
  // PEACOCK
  // --------------------------------------
  "peacock.affectStatusBar": false,
  "peacock.affectActivityBar": true, // Định nghĩa danh sách các màu yêu thích để dễ dàng chọn nhanh
  "peacock.showColorInStatusBar": false,
  "peacock.favoriteColors": [
    { "name": "Jazzberry Jam", "value": "#AC1754" },
    { "name": "Dark Cerulean", "value": "#205781" },
    { "name": "Persian Blue", "value": "#211C84" },
    { "name": "Tangerine", "value": "#C14600" },
    { "name": "Rich Lavender", "value": "#AA60C8" },
    { "name": "Blue Lagoon", "value": "#0A97B0" },
    { "name": "Dark Gunmetal", "value": "#343131" },
    { "name": "Medium Aquamarine", "value": "#66D2CE" }
  ],

  // --------------------------------------
  // FIND IT FASTER
  // --------------------------------------
  "find-it-faster.general.useTerminalInEditor": true,
  "find-it-faster.general.killTerminalAfterUse": true,
  "find-it-faster.general.shellPathForTerminal": "",
  "find-it-faster.general.batTheme": "Dracula",

  // --------------------------------------
  //  VIM
  // --------------------------------------
  "vim.leader": "<Space>",
  "vim.sneakUseIgnorecaseAndSmartcase": true, // Áp dụng ignorecase và smartcase vào sneak
  "vim.highlightedyank.enable": true, // Highlight Yanked Text
  "vim.highlightedyank.color": "#a9dc7660",
  "vim.highlightedyank.duration": 250,
  "vim.useSystemClipboard": true, // Sử dụng clipboard hệ thống
  "vim.overrideCopy": true, // Dùng `y` để copy vào clipboard hệ thống
  "vim.hlsearch": true, // Highlight kết quả tìm kiếm
  "vim.searchHighlightColor": "#FFBF00", // "#FFBF00",
  "vim.searchHighlightTextColor": "#FFFFFF",
  "vim.searchMatchTextColor": "pink",
  "vim.incsearch": true, // Hiển thị kết quả tìm kiếm khi nhập
  "vim.ignorecase": true, // Không phân biệt chữ hoa/thường khi tìm kiếm
  "vim.smartcase": true, // Phân biệt chữ hoa khi tìm kiếm nếu nhập chữ hoa
  "vim.mouseSelectionGoesIntoVisualMode": true,
  "vim.useCtrlKeys": true, // Bật phím Ctrl của Vim để ghi đè các thao tác VS Code phổ biến như sao chép, dán, tìm kiếm, v.v.
  "vim.autoindent": true,
  "vim.showcmd": true,

  // ReplaceWithRegister
  "vim.replaceWithRegister": false,

  // vim-sneak - used key `s <char> <char>`
  // Cho phép nhảy nhanh bằng ký tự
  "vim.sneak": true,

  // vim-easymotion
  "vim.easymotion": true, // Bật chế độ di chuyển nhanh
  "vim.easymotionMarkerBackgroundColor": "#FFBF00",
  "vim.easymotionMarkerForegroundColorOneChar": "#DC143C",
  "vim.easymotionMarkerForegroundColorTwoCharFirst": "#DC143C",
  "vim.easymotionMarkerForegroundColorTwoCharSecond": "#D84315",
  "vim.easymotionIncSearchForegroundColor": "#FFBF00",
  "vim.easymotionDimColor": "#777777",

  // vim-airline
  "vim.statusBarColorControl": true,
  "vim.statusBarColors.normal": ["#1F7D53", "#ffffff"],
  "vim.statusBarColors.insert": ["#E52020", "#ffffff"],
  "vim.statusBarColors.visual": ["#9C27B0", "#ffffff"],
  "vim.statusBarColors.visualline": ["#8E24AA", "#ffffff"],
  "vim.statusBarColors.visualblock": ["#6A1B9A", "#ffffff"],
  "vim.statusBarColors.replace": ["#D84315", "#ffffff"],
  "vim.statusBarColors.commandlineinprogress": ["#DC143C", "#ffffff"],
  "vim.statusBarColors.searchinprogressmode": ["#FF0B55", "#ffffff"],
  "vim.statusBarColors.easymotionmode": ["#3A59D1", "#ffffff"],
  "vim.statusBarColors.easymotioninputmode": ["#03A9F4", "#ffffff"],
  "vim.statusBarColors.surroundinputmode": ["#222222", "#ffffff"],

  // vim-surround
  "vim.surround": true,

  "vim.normalModeKeyBindingsNonRecursive": [
    // Quick-key
    { "before": ["\\"], "commands": ["whichkey.show"] },

    // vim-easymotion
    { "before": ["."], "after": ["<leader>", "<leader>", "/"] },

    { "before": ["<S-tab>"], "commands": ["editor.action.outdentLines"] },
    { "before": ["<tab>"], "commands": ["editor.action.indentLines"] },

    // Move
    { "before": ["j"], "after": ["g", "j", "z", "z"] },
    { "before": ["k"], "after": ["g", "k", "z", "z"] },
    { "before": ["<Down>"], "after": ["g", "j", "z", "z"] },
    { "before": ["<Up>"], "after": ["g", "k", "z", "z"] },
    { "before": ["}"], "after": ["}", "z", "z"] },
    { "before": ["{"], "after": ["{", "z", "z"] },

    // used key `[`, `]`
    { "before": ["]", "m"], "commands": ["bookmarks.jumpToNext"] },
    { "before": ["[", "m"], "commands": ["bookmarks.jumpToPrevious"] },
    // Điều hướng giữa các lỗi (Diagnostics)
    // { "before": ["[", "d"], "commands": ["editor.action.marker.prev"] },
    // { "before": ["]", "d"], "commands": ["editor.action.marker.prev"] },

    // used Ctrl `C`
    // Undo
    // { "before": ["<C-z>"], "commands": ["undo"] },
    // Move lines
    { "before": ["<C-j>"], "commands": ["editor.action.moveLinesDownAction"] },
    {
      "before": ["<C-Down>"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    { "before": ["<C-k>"], "commands": ["editor.action.moveLinesUpAction"] },
    { "before": ["<C-Up>"], "commands": ["editor.action.moveLinesUpAction"] },
    { "before": ["<C-d>"], "commands": ["editor.action.copyLinesDownAction"] },
    { "before": ["<C-f>"], "commands": ["actions.find"] },
    { "before": ["<C-p>"], "commands": ["workbench.action.quickOpen"] },
    // { "before": ["<C-[>"], "after": ["<C>", "d"] },
    // { "before": ["<C-]>"], "after": ["<C>", "u"] },

    // Control Window
    // <C-q>: quit buffer
    // <C-h/j/k/l>: goto left/down/up/right buffer
    // <C-s/v>: split/split_vertically window

    // vim-sneak
    // used key `s`

    // LSP
    // used key `g`
    { "before": ["g", "d"], "commands": ["editor.action.revealDefinition"] },
    { "before": ["g", "p"], "commands": ["editor.action.peekDefinition"] },
    { "before": ["g", "D"], "commands": ["editor.action.revealDeclaration"] },
    { "before": ["g", "r"], "commands": ["editor.action.goToReferences"] },
    { "before": ["g", "R"], "commands": ["references-view.find"] },
    { "before": ["g", "i"], "commands": ["editor.action.goToImplementation"] },
    { "before": ["g", "t"], "commands": ["editor.action.peekTypeDefinition"] },
    { "before": ["g", "s"], "commands": ["workbench.action.gotoSymbol"] },
    { "before": ["g", "S"], "commands": ["workbench.action.showAllSymbols"] },
    { "before": ["g", "f"], "commands": ["fuzzySearch.activeTextEditor"] },
    { "before": ["g", "k"], "commands": ["editor.action.showHover"] },

    // #Bookmarks - use extension Bookmarks
    // used key `m`
    { "before": ["m", "t"], "commands": ["bookmarks.toggle"] },
    { "before": ["m", "e"], "commands": ["bookmarks.toggleLabeled"] },
    { "before": ["m", "n"], "commands": ["bookmarks.jumpToNext"] },
    { "before": ["m", "p"], "commands": ["bookmarks.jumpToPrevious"] },
    { "before": ["m", "l"], "commands": ["bookmarks.list"] },
    { "before": ["m", "L"], "commands": ["bookmarks.listFromAllFiles"] },
    { "before": ["m", "C"], "commands": ["bookmarks.clear"] },

    // Buffers
    {
      "before": ["Q", "Q"],
      "commands": ["workbench.action.closeActiveEditor"]
    }, // Close buffer
    { "before": ["<S-h>"], "commands": [":bprevious"] },
    { "before": ["<S-l>"], "commands": [":bnext"] },
    {
      "before": ["<leader>", "b", "n"],
      "commands": ["workbench.action.files.newUntitledFile"]
    }, // New Buffer/UntitiledFile
    {
      "before": ["<leader>", "b", "q"],
      "commands": ["workbench.action.closeActiveEditor"]
    }, // Close buffer
    {
      "before": ["<leader>", "b", "u"],
      "commands": ["workbench.action.reopenClosedEditor"]
    }, // Re-open buffer
    {
      "before": ["<leader>", "b", "y"],
      "commands": [
        "editor.action.selectAll",
        "editor.action.clipboardCopyAction",
        "cancelSelection"
      ]
    }, // copy all file (Ctr+A - Ctrl C )
    {
      "before": ["<leader>", "b", "p"],
      "commands": ["editor.action.selectAll", "editor.action.past"]
    }, // selected all file and past
    {
      "before": ["<leader>", "b", "c"],
      "commands": ["workbench.action.closeOtherEditors"]
    }, // Close others buffer
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    // splits - mở cửa sổ editer trái phải
    { "before": ["<leader>", "v"], "commands": [":vsplit"] },
    { "before": ["<leader>", "s"], "commands": [":split"] },

    // custom paste <leader-p>
    { "before": ["<leader>", "p", "i", "q"], "after": ["v", "i", "q", "p"] },
    { "before": ["<leader>", "p", "a", "q"], "after": ["v", "a", "q", "p"] },
    { "before": ["<leader>", "p", "i", "B"], "after": ["v", "i", "B", "p"] },
    { "before": ["<leader>", "p", "a", "B"], "after": ["v", "a", "B", "p"] },
    { "before": ["<leader>", "p", "i", "b"], "after": ["v", "i", "b", "p"] },
    { "before": ["<leader>", "p", "a", "b"], "after": ["v", "a", "b", "p"] },
    { "before": ["<leader>", "p", "i", "t"], "after": ["v", "i", "t", "p"] },
    { "before": ["<leader>", "p", "a", "t"], "after": ["v", "a", "t", "p"] },

    {
      "before": ["<leader>", "r"],
      "commands": ["editor.action.rename"],
      "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    { "before": ["<leader>", "/"], "commands": ["fuzzySearch.activeTextEditor"] },

    
    // # find - need installed extension FindItFaster
    {
      "before": ["<leader>", "f", "f"],
      "commands": ["find-it-faster.findFiles"]
    },
    {
      "before": ["<leader>", "f", "F"],
      "commands": ["find-it-faster.findFilesWithType"]
    },
    {
      "before": ["<leader>", "f", "s"],
      "commands": ["find-it-faster.findWithinFiles"]
    },
    {
      "before": ["<leader>", "f", "S"],
      "commands": ["find-it-faster.findWithinFilesWithType"]
    },

    // #harpoon - need installed extension Harpoon
    {
      "before": ["<leader>", "h", "p"],
      "commands": ["vscode-harpoon.editorQuickPick"]
    },
    {
      "before": ["<leader>", "h", "a"],
      "commands": ["vscode-harpoon.addEditor"]
    },
    {
      "before": ["<leader>", "h", "e"],
      "commands": ["vscode-harpoon.editEditors"]
    },

    //
    { "before": ["<leader>", "y"], "commands": [":reg"] },
    { "before": ["<leader>", "n"], "commands": [":nohlsearch"] }
  ],
  "vim.visualModeKeyBindings": [
    { "before": ["\\"], "commands": ["whichkey.show"] },

    // Fuzzy search
    {
      "before": ["g", "f"],
      "commands": ["fuzzySearch.activeTextEditorWithCurrentSelection"]
    },

    // vim-comment
    { "before": ["<leader>", "c"], "commands": ["editor.action.blockComment"] },

    // Stay in visual mode while indenting
    { "before": ["<S-tab>"], "commands": ["editor.action.outdentLines"] },
    { "before": ["<tab>"], "commands": ["editor.action.indentLines"] },

    // Move selected lines while staying in visual mode
    { "before": ["<C-j>"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["<C-k>"], "commands": ["editor.action.moveLinesUpAction"] },

    {
      "before": ["<leader>", "f"],
      "commands": ["editor.actions.addSectionToNextFindMatch"]
    }
  ],
  "vim.insertModeKeyBindings": [
    { "before": ["<D-s>"], "commands": [":w", "<Esc>"] },
    { "before": ["<C-s>"], "commands": [":w", "<Esc>"] },
    { "before": ["<C-z>"], "commands": ["undo"] }
  ],
  "vim.handleKeys": {
    "<C-c>": false, // copy
    "<C-v>": false, // past
    "<C-n>": false, // new file - vscode default
    "<C-z>": false,
    "<C-x>": false,
  },

  // --------------------------------------
  // VSCode Animations:
  // --------------------------------------
  "animations.Command-Palette": "Slide", // Hiệu ứng animation cho Command Palette - "None", "Scale", "Slide", "Fade"
  "animations.Tabs": "Scale", // Hiệu ứng animation cho tab - "None", "Scale", "Slide", "Flip"
  "animations.Scrolling": "None", // Hiệu ứng animation khi cuộn - "None", "Scale", "Slide", "Fade"
  "animations.Active": "Indent", // Hiệu ứng animation cho item đang hoạt động - "None", "Scale", "Indent"
  "animations.CursorAnimation": true, // Hiệu ứng làm mờ khi mất focus
  "animations.CursorAnimationOptions": {
    "Color": "#333",
    "CursorStyle": "line",
    "TrailLength": 8
  },
  "animations.UseCursorColorForCursorAnimation": true,
  "animations.Focus-Dimming-Amount": 100,
  "animations.Focus-Dimming-Mode": "Full Window",
  "animations.Install-Method": "Custom CSS and JS",

  // --------------------------------------
  // VSCODE CUSTOM CSS
  // --------------------------------------
  "vscode_custom_css.imports": [
    "file:///Users/_david/vscode-custom/src/vscode-script.js",
    "file:///Users/_david/vscode-custom/src/vscode-styles.css",
    "file:///Users/_david/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.7/dist/updateHandler.js"
  ],
  //   "vscode_custom_css.imports": [
  //   "file:///C:/Users/DanielVo/Documents/vscode-settings/vscode-script.js",
  //   "file:///C:/Users/DanielVo/Documents/vscode-settings/vscode-styles.css",
  //   "file:///C:/Users/DanielVo/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.7/dist/updateHandler.js"
  // ],

  // --------------------------------------
  //  WHICH KEY
  // --------------------------------------
  "whichkey.sortOrder": "none",
  "whichkey.showIcons": true,
  "whichkey.delay": 0,
  "whichkey.bindings": [
    {
      "key": "q",
      "name": "[q]uick Motion",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "[f]ormat Document",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "F",
          "name": "[F]ormat Document With ...",
          "type": "command",
          "command": "editor.action.formatDocument.multiple",
          "when": "editorHasDocumentFormattingProvider && editorTextFocus"
        },
        {
          "key": "o",
          "name": "Quick [o]pen Files Recent",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        // {
        //   "key": "r",
        //   "name": "[r]ename (Var, function, etc...)",
        //   "type": "command",
        //   "command": "editor.action.rename",
        //   "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        // },
        {
          "key": "l",
          "name": "Git [l]og (oneline)",
          "type": "command",
          "command": "multiCommand.runGitLog"
        }
      ]
    },
    {
      "key": "f",
      "name": "[f]ind & Replace",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "[f]ind and Replace In File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "r",
          "name": "Find and [r]eplace In Files",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "b",
      "name": "[b]uffers / Editors",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "[d]elete Active Buffer",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "c",
          "name": "[c]lose Other Editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "[n]ew Untitled Buffer (New blank file)",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "m",
          "name": "[m]ove Editor Into [+]",
          "type": "bindings",
          "bindings": [
            {
              "key": "h",
              "name": "Move editor into LEFT [h] group",
              "type": "command",
              "command": "workbench.action.moveEditorToLeftGroup"
            },
            {
              "key": "j",
              "name": "Move editor into BELOW [j] group",
              "type": "command",
              "command": "workbench.action.moveEditorToBelowGroup"
            },
            {
              "key": "k",
              "name": "Move editor into ABOVE [k] group",
              "type": "command",
              "command": "workbench.action.moveEditorToAboveGroup"
            },
            {
              "key": "l",
              "name": "Move editor into RIGHT [l] group",
              "type": "command",
              "command": "workbench.action.moveEditorToRightGroup"
            }
          ]
        },
        {
          "key": "u",
          "name": "Reopen ([u]ndo) Closed Editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy ([y]ark) Buffer to Clipboard (Copy All File [Ctrl + a])",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "p",
      "name": "[p]roject Manager",
      "type": "bindings",
      "bindings": [
        {
          "key": "l",
          "name": "[l]ist Projects to Open in New Window",
          "type": "command",
          "command": "projectManager.listProjectsNewWindow"
        },
        {
          "key": "L",
          "name": "[L]ist Projects to Open",
          "type": "command",
          "command": "projectManager.listProjects"
        },
        {
          "key": "e",
          "name": "[e]dit Project",
          "type": "command",
          "command": "projectManager.editProjects"
        },
        {
          "key": "r",
          "name": "[r]efresh Projects",
          "type": "command",
          "command": "projectManager.refreshProjects"
        },
        {
          "key": "w",
          "name": "[w]hat's News",
          "type": "command",
          "command": "projectManager.whatsNew"
        }
      ]
    },
    {
      "key": "c",
      "name": "[c]odeSnap",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "type": "command",
          "name": "[s]tart CodeSnap",
          "command": "codesnap.start",
          "when": "selected && editorTextFocus"
        }
      ]
    },
    {
      "key": "m",
      "name": "Book[m]arks",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "[t]oggle Bookmarks",
          "type": "command",
          "command": "bookmarks.toggle",
          "when": "editorTextFocus"
        },
        {
          "key": "n",
          "name": "Toggle Lable [n]ame",
          "type": "command",
          "command": "bookmarks.toggleLabeled",
          "when": "editorTextFocus"
        },
        {
          "key": "l",
          "name": "[l]ist Bookmarks (In File)",
          "type": "command",
          "command": "bookmarks.list",
          "when": "editorTextFocus"
        },
        {
          "key": "L",
          "name": "[L]ist Bookmarks (All Files)",
          "type": "command",
          "command": "bookmarks.listFromAllFiles",
          "when": "editorTextFocus"
        },
        {
          "key": "r",
          "name": "[r]efresh",
          "type": "command",
          "command": "bookmarks.refresh"
        },
        {
          "key": "c",
          "name": "[c]lear",
          "type": "command",
          "command": "bookmarks.clear"
        },
        {
          "key": "C",
          "name": "[C]lear (All Files)",
          "type": "command",
          "command": "bookmarks.clearFromAllFiles"
        },
        {
          "key": "s",
          "name": "[s]upport",
          "type": "command",
          "command": "bookmarks.supportBookmarks"
        }
      ]
    },
    {
      "key": "L",
      "name": "Problems/Troubles",
      "type": "bindings",
      "bindings": [
        {
          "key": "n",
          "type": "command",
          "name": "Next Problem",
          "command": "editor.action.marker.next"
        },
        {
          "key": "p",
          "type": "command",
          "name": "Previous Problem",
          "command": "editor.action.marker.prev"
        },
        {
          "key": "q",
          "type": "command",
          "name": "Quick Fix",
          "command": "editor.action.quickFix"
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart ebug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "g",
      "name": "[g]it",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": ".",
          "name": "View Changes (Review)",
          "type": "command",
          "command": "git.viewChanges"
        },
        // {
        //   "key": "h",
        //   "name": "View History",
        //   "type": "command",
        //   "command": "gitlens.History"
        // },
        {
          "key": "a",
          "name": "Stage All Change (git [a]dd .)",
          "type": "command",
          "command": "git.stageAll"
        },
        {
          "key": "c",
          "name": "[c]ommit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "p",
          "name": "[p]ush to ...",
          "type": "command",
          "command": "git.pushTo"
          // "command": "multiCommand.pushTo"
        },
        {
          "key": "P",
          "name": "[p]ull from ...",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "u",
          "name": "Unstage (git reset <file>)",
          "type": "command",
          "command": "git.unstage"
        },
        {
          "key": "k",
          "name": "Chec[k]out",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "C",
          "name": "[C]herry [+]",
          "type": "bindings",
          "bindings": [
            {
              "key": "p",
              "name": "Cherry [p]ick...",
              "type": "command",
              "command": "git.cherryPick"
            },
            {
              "key": "a",
              "name": "[a]bort Cherry Pick",
              "type": "command",
              "command": "git.cherryPickAbort"
            }
          ]
        },
        {
          "key": "d",
          "name": "[d]elete [+]",
          "type": "bindings",
          "bindings": [
            {
              "key": "b",
              "name": "Delete [b]ranch",
              "type": "command",
              "command": "git.deleteBranch"
            },
            {
              "key": "r",
              "name": "Delete [R]emote Branch",
              "type": "command",
              "command": "git.deleteRemoteBranch"
            }
          ]
        },
        {
          "key": "D",
          "name": "[d]iscard [+]",
          "type": "bindings",
          "bindings": [
            {
              "key": "c",
              "name": "Discard Changes (Current file)",
              "type": "command",
              "command": "git.clean"
            },
            {
              "key": "a",
              "name": "Discard Changes (All)",
              "type": "command",
              "command": "git.cleanAll"
            }
          ]
        },
        {
          "key": "o",
          "name": "[o]pen [+]",
          "type": "bindings",
          "bindings": [
            {
              "key": "c",
              "name": "Open Changes",
              "type": "command",
              "command": "git.viewChanges"
            },
            {
              "key": "s",
              "name": "Open Staged Changes",
              "type": "command",
              "command": "git.viewStagedChanges"
            },
            {
              "key": "b",
              "name": "Browse... (Open File In Remote)",
              "type": "command",
              "command": "gitlens.openFileInRemote"
            }
          ]
        },
        {
          "key": "t",
          "name": "[t]ag [+]",
          "type": "bindings",
          "bindings": [
            {
              "key": "c",
              "name": "[c]reate Tag",
              "type": "command",
              "command": "git.createTag"
            },
            {
              "key": "p",
              "name": "[p]ush Tags",
              "type": "command",
              "command": "git.pushTags"
            },
            {
              "key": "d",
              "name": "[d]elete Tag",
              "type": "command",
              "command": "git.deleteTag"
            }
          ]
        }
      ]
    },
    {
      "key": "l",
      "name": "LSP ([l]anguage Server Protocol)",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "a",
          "name": "Auto Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "o",
          "name": "Explorer: Focus on Outline View",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "v",
          "name": "Explorer: Find All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        }
      ]
    },
    {
      "key": "s",
      "name": "[s]ettings",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Show All Commands",
          "type": "command",
          "command": "workbench.action.showCommands"
        },
        {
          "key": "u",
          "name": "Open Settings ([u]I)",
          "type": "command",
          "command": "workbench.action.openSettings"
        },
        {
          "key": "j",
          "name": "Open Settings ([j]SON)",
          "type": "command",
          "command": "workbench.action.openSettingsJson"
        },
        {
          "key": "k",
          "name": "[K]eybindings [+]",
          "type": "bindings",
          "bindings": [
            {
              "key": "u",
              "name": "Open Keybindings ([u]I)",
              "type": "command",
              "command": "workbench.action.openGlobalKeybindings"
            },
            {
              "key": "j",
              "name": "Open Keybindings ([j]SON)",
              "type": "command",
              "command": "workbench.action.openGlobalKeybindingsFile"
            }
          ]
        },
        {
          "key": "t",
          "name": "Select Color [t]heme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "i",
          "name": "Toggle [i]con Theme",
          "type": "command",
          "command": "workbench.action.selectIconTheme"
        }
      ]
    },
    {
      "key": "D",
      "name": "[D]eveloper [+]",
      "type": "bindings",
      "bindings": [
        {
          "key": "r",
          "name": "[r]eload Window",
          "type": "command",
          "command": "workbench.action.reloadWindow"
        }
      ]
    },
    {
      "key": "E",
      "name": "[E]xtensions [+]",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Extension [c]ustom CSS and JS Loaded [+]",
          "type": "bindings",
          "bindings": [
            {
              "key": "r",
              "name": "[r]eload/update",
              "type": "command",
              "command": "extension.updateCustomCSS"
            }
          ]
        },
        {
          "key": "p",
          "name": "Extension [p]eacock [+]",
          "type": "bindings",
          "bindings": [
            {
              "key": "c",
              "name": "[c]hange to a Favorite Color",
              "type": "command",
              "command": "peacock.changeColorToFavorite"
            },
            {
              "key": "e",
              "name": "[e]nter a Color",
              "type": "command",
              "command": "peacock.enterColor"
            },
            {
              "key": "s",
              "name": "[s]ave Current Color to Favorites",
              "type": "command",
              "command": "peacock.saveColorToFavorites"
            },
            {
              "key": "r",
              "name": "Surprise Me with a [r]andom Color",
              "type": "command",
              "command": "peacock.changeColorToRandom"
            },
            {
              "key": "R",
              "name": "[R]eset Workspace Colors",
              "type": "command",
              "command": "peacock.resetWorkspaceColors"
            }
          ]
        }
      ]
    }
  ],

  // --------------------------------------
  //  ryuta46.multi-command
  // --------------------------------------
  "multiCommand.commands": [
    {
      "command": "multiCommand.runGitLog",
      "sequence": [
        "workbench.action.terminal.focus",
        "workbench.action.terminal.new",
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": { "text": "git log --oneline\n" }
        }
      ]
    }
  ],

  // To improve performance
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },

  // --------------------------------------
  //  WORKBENCH COLOR CUSTOM
  // --------------------------------------
  "workbench.colorCustomizations": {
    "activityBar.activeBackground": "#2a73aa",
    "activityBar.background": "#2a73aa",
    "activityBar.foreground": "#e7e7e7",
    "activityBar.inactiveForeground": "#e7e7e799",
    "activityBarBadge.background": "#661945",
    "activityBarBadge.foreground": "#e7e7e7",
    "commandCenter.border": "#e7e7e799",
    "sash.hoverBorder": "#2a73aa",
    "titleBar.activeBackground": "#205781",
    "titleBar.activeForeground": "#e7e7e7",
    "titleBar.inactiveBackground": "#20578199",
    "titleBar.inactiveForeground": "#e7e7e799",
    "statusBar.background": "#9C27B0",
    "statusBar.noFolderBackground": "#9C27B0",
    "statusBar.debuggingBackground": "#9C27B0",
    "statusBar.foreground": "#ffffff",
    "statusBar.debuggingForeground": "#ffffff"
  }
}

