{{
  // --------------------------------------
  //
  // --------------------------------------
  "files.autoSave": "onFocusChange",
  "editor.wordWrap": "on",
  "editor.tabSize": 2,
  "editor.fontSize": 13,
  "editor.cursorBlinking": "phase",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.renderWhitespace": "all",
  "editor.linkedEditing": true,
  "editor.lineNumbers": "relative",
  "editor.detectIndentation": false, // Không tự động phát hiện indentation từ file, giữ nguyên giá trị tabSize.
  "editor.showFoldingControls": "always", // biểu tượng thu gọn/mở rộng code (> bên lề trái).
  "editor.minimap.enabled": false, // ẨN mini-map
  "editor.multiCursorModifier": "ctrlCmd", // Cho phép sử dụng Ctrl (Windows/Linux) hoặc Cmd (macOS) để thêm nhiều con trỏ (multi-cursor).
  "editor.cursorStyle": "line", // Đổi con trỏ sang dạng khối (block) thay vì kiểu gạch đứng (line) mặc định.
  "editor.stickyScroll.enabled": false, // Tắt Sticky Scroll, không hiển thị tiêu đề function/class khi cuộn code.
  "editor.guides.indentation": true,
  "editor.wordWrapColumn": 80,
  "editor.fontFamily": "FiraCode Nerd Font Mono, Menlo, Monaco, 'Courier New', monospac",

  // --------------------------------------
  // BREADCRUMBS
  // --------------------------------------
  "breadcrumbs.enabled": false,

  // --------------------------------------
  // WINDOW
  // --------------------------------------
  "window.newWindowDimensions": "default", // Kích thước cửa sổ khi mở VSCode

  // --------------------------------------
  // CHAT
  // --------------------------------------
  "chat.commandCenter.enabled": false,

  // --------------------------------------
  // TERMINAL
  // --------------------------------------
  "terminal.integrated.fontFamily": "FiraCode Nerd Font Mono",
  "terminal.integrated.fontSize": 13,

  // --------------------------------------
  // FILES
  // --------------------------------------
  "files.eol": "\n", // Xác định kiểu ký tự kết thúc dòng (End Of Line - EOL) khi lưu file.
  "files.trimTrailingWhitespace": false, // Tự động xóa khoảng trắng dư thừa ở cuối dòng khi lưu file.
  "files.insertFinalNewline": true, // Thêm một dòng trống cuối file khi lưu.

  // --------------------------------------
  // ZEN MODE
  // --------------------------------------
  "zenMode.hideLineNumbers": false,
  "zenMode.hideStatusBar": false,
  "zenMode.fullScreen": true,

  // --------------------------------------
  // WORKBENCH
  // --------------------------------------
  "workbench.colorTheme": "Aura Dracula Spirit", // Theme
  "workbench.sideBar.location": "right",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.editor.showTabs": "single", // chỉ hiển thị 1 tab duy nhất
  "workbench.statusBar.visible": true, // StatusBar -  thanh dưới cùng
  "workbench.startupEditor": "none", // Khi mở vscode, không hiển thị welcome or any file
  "workbench.tips.enabled": false, // Tắt gợi ý mẹo
  "workbench.tree.enableStickyScroll": false, // Chế độ Sticky Scroll trong cây thư mục (tính năng hiển thị dòng tiêu đề ở trên cùng khi cuộn).
  "workbench.tree.renderIndentGuides": "always", // Hiển thị đường kẻ dọc giúp căn chỉnh cấp bậc thư mục.
  "workbench.tree.indent": 16,
  "workbench.layoutControl.enabled": false,
  "workbench.navigationControl.enabled": false,

  // --------------------------------------
  // MATERIAL ICON THEME
  // --------------------------------------
  "material-icon-theme.hidesExplorerArrows": true, // Ẩn mủi tên xuống
  "material-icon-theme.files.color": "#42a5f5",

  // --------------------------------------
  // EXPLORER
  // --------------------------------------
  "explorer.compactFolders": false, // Tính năng gom nhóm các thư mục con vào một dòng nếu chỉ có một thư mục con duy nhất.
  "explorer.confirmDragAndDrop": true, // Hộp thoại xác nhận khi kéo thả file/thư mục.
  "explorer.confirmDelete": false, // Hộp thoại xác nhận khi xóa file/thư mục.
  "explorer.decorations.badges": true, // Hiển thị dấu hiệu (badges) trên file/thư mục (ví dụ: dấu hiệu Git thay đổi, lỗi, v.v.).
  "git.decorations.enabled": true, // Các ký hiệu của Git trong Explorer (ví dụ: chữ “M” màu vàng cho file bị sửa đổi).

  // --------------------------------------
  // TAILWIND CSS
  // --------------------------------------
  "tailwindCSS.emmetCompletions": true,

  // --------------------------------------
  // GITLENS
  // --------------------------------------
  "gitlens.advanced.messages": {
    "suppressGitMissingWarning": true
  },

  // --------------------------------------
  // [TYPESCRIPT]
  // --------------------------------------
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // --------------------------------------
  // PEACOCK
  // --------------------------------------
  "peacock.affectStatusBar": false, // Khi bật, Peacock sẽ thay đổi màu thanh bên (Sidebar)
  "peacock.affectActivityBar": true, // Định nghĩa danh sách các màu yêu thích để dễ dàng chọn nhanh
  "peacock.favoriteColors": [
    { "name": "Jazzberry Jam", "value": "#AC1754" },
    { "name": "Dark Cerulean", "value": "#205781" },
    { "name": "Persian Blue", "value": "#211C84" },
    { "name": "Tangerine", "value": "#C14600" },
    { "name": "Rich Lavender", "value": "#AA60C8" },
    { "name": "Blue Lagoon", "value": "#0A97B0" },
    { "name": "Dark Gunmetal", "value": "#343131" },
    { "name": "Medium Aquamarine", "value": "#66D2CE" }
  ],

  // --------------------------------------
  //  VIM
  // --------------------------------------
  "vim.easymotion": true, // Bật chế độ di chuyển nhanh
  "vim.surround": true,
  "vim.commentary": true, // Comment code
  "vim.indentObject": true, // Chọn theo khối indentation - vii - vai
  "vim.sneak": true, // Cho phép nhảy nhanh bằng ký tự
  "vim.sneakUseIgnorecaseAndSmartcase": true, // Áp dụng ignorecase và smartcase vào sneak

  "vim.highlightedyank.enable": true, // Highlight Yanked Text
  "vim.highlightedyank.color": "#a9dc7660",
  "vim.highlightedyank.duration": 250,

  "vim.leader": "<Space>",
  "vim.useSystemClipboard": true, // Sử dụng clipboard hệ thống
  "vim.overrideCopy": true, // Dùng `y` để copy vào clipboard hệ thống
  "vim.hlsearch": true, // Highlight kết quả tìm kiếm
  "vim.searchHighlightColor": "#FFBF00",
  "vim.searchHighlightTextColor": "#333333",
  "vim.searchMatchTextColor": "pink",

  "vim.incsearch": true, // Hiển thị kết quả tìm kiếm khi nhập
  "vim.ignorecase": true, // Không phân biệt chữ hoa/thường khi tìm kiếm
  "vim.smartcase": true, // Phân biệt chữ hoa khi tìm kiếm nếu nhập chữ hoa
  "vim.mouseSelectionGoesIntoVisualMode": true,
  "vim.useCtrlKeys": false,
  //"vim.cursorStylePerMode.normal": "",
  "vim.statusBarColorControl": true,
  "vim.statusBarColors": {
    "normal": ["#1F7D53", "#FFFFFF"], // Xanh lá đậm (Normal Mode)
    "insert": ["#E52020", "#FFFFFF"], // Xanh dương (Insert Mode)
    "visual": ["#9C27B0", "#FFFFFF"], // Tím (Visual Mode)
    "visualline": ["#8E24AA", "#FFFFFF"], // Tím đậm (Visual Line Mode)
    "visualblock": ["#6A1B9A", "#FFFFFF"], // Tím tối hơn (Visual Block Mode)
    "replace": ["#D84315", "#FFFFFF"], // Cam đậm (Replace Mode)
    "commandlineinprogress": ["#DC143C", "#FFFFFF"], // Cam sáng (Command Mode)
    "searchinprogressmode": ["#FFBF00", "#333333"], // Vàng (Search Mode)
    "easymotionmode": ["#0288D1", "#FFFFFF"], // Xanh biển (EasyMotion)
    "easymotioninputmode": ["#03A9F4", "#FFFFFF"], // Xanh nước biển nhạt (EasyMotion Input)
    "surroundinputmode": ["#009688", "#FFFFFF"] // Xanh lục bảo (Surround Mode)
  },
  "vim.undoHistory": 1000, // Lưu lịch sử undo lên đến 1000 bước
  "vim.undoAfterCursorMove": false, // Không reset undo khi di chuyển con trỏ
  "vim.autoindent": true,
  "vim.showcmd": true,

  "vim.normalModeKeyBindingsNonRecursive": [
    // {
    //   "before": ["<LeftClick>"],
    //   "after": ["z", "z"]
    // },
    { "before": ["/"], "commands": ["fuzzySearch.activeTextEditor"] },
    { "before": ["\\"], "commands": ["whichkey.show"] },
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },

    { "before": ["<S-tab>"], "commands": ["editor.action.outdentLines"] },
    { "before": ["<tab>"], "commands": ["editor.action.indentLines"] },

    // Undo
    { "before": ["<C-z>"], "commands": ["undo"] },

    // move
    { "before": ["j"], "after": ["g", "j", "z", "z"] },
    { "before": ["k"], "after": ["g", "k", "z", "z"] },
    { "before": ["<Down>"], "after": ["g", "j", "z", "z"] },
    { "before": ["<Up>"], "after": ["g", "k", "z", "z"] },
    { "before": ["}"], "after": ["}", "z", "z"] },
    { "before": ["{"], "after": ["{", "z", "z"] },
    // PageUp, PageDown
    // { "before": ["<PageUp>"], "after": ["<C-u>", "z", "z"] },

    // move lines
    { "before": ["<A-j>"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["<A-k>"], "commands": ["editor.action.moveLinesUpAction"] },

    // Editor
    // { "before": ["leader", "e", "x"], "commands": ["workbench.action.closeActiveEditor"] },

    // Buffers
    { "before": ["<S-h>"], "commands": [":bprevious"] },
    { "before": ["<S-l>"], "commands": [":bnext"] },
    {
      "before": ["leader", "b", "n"],
      "commands": ["workbench.action.files.newUntitledFile"]
    }, // New Buffer/UntitiledFile
    {
      "before": ["leader", "b", "q"],
      "commands": ["workbench.action.closeActiveEditor"]
    }, // Close buffer
    {
      "before": ["Q", "Q"],
      "commands": ["workbench.action.closeActiveEditor"]
    }, // Close buffer
    {
      "before": ["leader", "b", "u"],
      "commands": ["workbench.action.reopenClosedEditor"]
    }, // Re-open buffer
    {
      "before": ["leader", "b", "y"],
      "commands": [
        "editor.action.selectAll",
        "editor.action.clipboardCopyAction",
        "cancelSelection"
      ]
    }, // copy all file (Ctr+A - Ctrl C )
    {
      "before": ["leader", "b", "c"],
      "commands": ["workbench.action.closeOtherEditors"]
    }, // Close others buffer

    // splits - mở cửa sổ editer trái phải
    { "before": ["leader", "v"], "commands": [":vsplit"] },
    { "before": ["leader", "s"], "commands": [":split"] },

    // Chuyển sang cửa sổ (editor) bên
    {
      "before": ["leader", "h"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["leader", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      "before": ["leader", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["leader", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },

    // Điều hướng giữa các lỗi (Diagnostics)
    { "before": ["[", "d"], "commands": ["editor.action.marker.prev"] },
    { "before": ["]", "d"], "commands": ["editor.action.marker.prev"] },

    //
    { "before": ["leader", "p"], "commands": ["workbench.action.quickOpen"] },
    { "before": ["leader", "f"], "commands": ["actions.find"] },
    { "before": ["leader", "F"], "commands": ["workbench.action.findInFiles"] },
    {
      "before": ["leader", "f", "f"],
      "commands": ["workbench.action.findInFiles"]
    },

    // LSP
    { "before": ["g", "d"], "commands": ["editor.action.revealDefinition"] },
    { "before": ["g", "D"], "commands": ["editor.action.revealDeclaration"] },
    { "before": ["g", "r"], "commands": ["editor.action.goToReferences"] },
    { "before": ["g", "R"], "commands": ["references-view.find"] },
    { "before": ["g", "i"], "commands": ["editor.action.goToImplementation"] },
    { "before": ["g", "y"], "commands": ["editor.action.goToTypeDefinition"] },
    { "before": ["g", "s"], "commands": ["workbench.action.gotoSymbol"] },
    { "before": ["g", "S"], "commands": ["workbench.action.showAllSymbols"] },
    // {
    //   "key": "v",
    //   "name": "View All References",
    //   "type": "command",
    //   "command": "references-view.find",
    //   "when": "editorHasReferenceProvider"
    // },

    { "before": ["g", "p", "d"], "commands": ["editor.action.peekDefinition"] },
    {
      "before": ["g", "p", "D"],
      "commands": ["editor.action.peekDeclaration"]
    },
    {
      "before": ["g", "p", "t"],
      "commands": ["editor.action.peekTypeDefinition"]
    },
    {
      "before": ["g", "p", "i"],
      "commands": ["editor.action.peekImplementation"]
    },

    {
      "before": ["g", "K"],
      "commands": ["editor.action.triggerParameterHints"]
    },
    { "before": ["K"], "commands": ["editor.action.showHover"] },
    { "before": ["leader"], "commands": ["editor.action.rename"] },

    // Bookmarks - use extension Bookmarks
    { "before": ["leader", "m", "t"], "commands": ["bookmarks.toggle"] },
    {
      "before": ["leader", "m", "l"],
      "commands": ["bookmarks.listFromAllFiles"]
    },

    //
    { "before": ["leader", "y"], "commands": ["vim.showRegisters"] },
    { "before": ["leader", "n"], "commands": [":nohlsearch"] }
  ],
  "vim.visualModeKeyBindings": [
    { "before": ["\\"], "commands": ["whichkey.show"] },
    // block comment /* */
    { "before": ["leader", "c"], "commands": ["editor.action.blockComment"] },

    // Stay in visual mode while indenting
    { "before": ["<S-tab>"], "commands": ["editor.action.outdentLines"] },
    { "before": ["<tab>"], "commands": ["editor.action.indentLines"] },

    // Move selected lines while staying in visual mode
    { "before": ["<A-j>"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["<A-k>"], "commands": ["editor.action.moveLinesUpAction"] }
    //{ "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
    //{ "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] }
  ],
  "vim.insertModeKeyBindings": [
    { "before": ["<D-s>"], "commands": [":w", "<Esc>"] },
    { "before": ["<C-s>"], "commands": [":w", "<Esc>"] },
    { "before": ["<C-z>"], "commands": ["undo"] }
  ],
  "vim.handleKeys": {
    "<C-r>": true, // redu
    "<C-n>": true, // new file - vscode default
    "<C-z>": true
  },

  // --------------------------------------
  // VSCode Animations:
  // --------------------------------------
  "animations.Command-Palette": "Slide", // Hiệu ứng animation cho Command Palette - "None", "Scale", "Slide", "Fade"
  "animations.Tabs": "Scale", // Hiệu ứng animation cho tab - "None", "Scale", "Slide", "Flip"
  "animations.Scrolling": "None", // Hiệu ứng animation khi cuộn - "None", "Scale", "Slide", "Fade"
  "animations.Active": "Indent", // Hiệu ứng animation cho item đang hoạt động - "None", "Scale", "Indent"
  "animations.CursorAnimation": true, // Hiệu ứng làm mờ khi mất focus
  "animations.CursorAnimationOptions": {
    "Color": "#333",
    "CursorStyle": "line",
    "TrailLength": 8
  },
  "animations.UseCursorColorForCursorAnimation": true,
  "animations.Focus-Dimming-Amount": 70,
  "animations.Focus-Dimming-Mode": "Full Window",
  "animations.Install-Method": "Custom CSS and JS",

  // --------------------------------------
  // VSCODE CUSTOM CSS
  // --------------------------------------
  "vscode_custom_css.imports": [
    "file:///Users/_david/vscode-custom/vscode-script.js",
    "file:///Users/_david/vscode-custom/vscode-styles.css",
    "file:///Users/_david/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.7/dist/updateHandler.js"
  ],

  // --------------------------------------
  //  WHICH KEY
  // --------------------------------------
  "whichkey.sortOrder": "none",
  "whichkey.showIcons": true,
  "whichkey.delay": 0,
  "whichkey.bindings": [
    {
      "key": "q",
      "name": "Quick Motion",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Format Document",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "F",
          "name": "Format Document With ...",
          "type": "command",
          "command": "editor.action.formatDocument.multiple",
          "when": "editorHasDocumentFormattingProvider && editorTextFocus"
        },
        {
          "key": "o",
          "name": "Quick Open Files Recent",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "r",
          "name": "Rename (Var, function, etc...)",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "l",
          "name": "Git Log (oneline)",
          "type": "command",
          "command": "multiCommand.runGitLog"
        }
      ]
    },
    {
      "key": "f",
      "name": "Find & Replace",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Find and Replace In File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "p",
          "name": "Find and Replace In Files",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "b",
      "name": "Buffers / Editors",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Close Other Editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "d",
          "name": "Close Active Editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "n",
          "name": "Next Editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous Editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "m",
          "name": "Move Editor Into [+]",
          "type": "bindings",
          "bindings": [
            {
              "key": "h",
              "name": "Move editor into LEFT group",
              "type": "command",
              "command": "workbench.action.moveEditorToLeftGroup"
            },
            {
              "key": "j",
              "name": "Move editor into BELOW group",
              "type": "command",
              "command": "workbench.action.moveEditorToBelowGroup"
            },
            {
              "key": "k",
              "name": "Move editor into ABOVE group",
              "type": "command",
              "command": "workbench.action.moveEditorToAboveGroup"
            },
            {
              "key": "l",
              "name": "Move editor into RIGHT group",
              "type": "command",
              "command": "workbench.action.moveEditorToRightGroup"
            }
          ]
        },
        {
          "key": "N",
          "name": "New Untitled Editor (New blank file)",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen Closed Editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy Buffer to Clipboard (Copy All File [Ctrl + a])",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "-",
      "name": "──────────────────────────────"
    },
    {
      "key": "c",
      "name": "CodeSnap",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "type": "command",
          "name": "Start CodeSnap",
          "command": "codesnap.start",
          "when": "selected && editorTextFocus"
        }
      ]
    },
    {
      "key": "m",
      "name": "Bookmarks",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Add / Remove (Toggle) Bookmarks",
          "type": "command",
          "command": "bookmarks.toggle",
          "when": "editorTextFocus"
        },
        {
          "key": "l",
          "name": "List Bookmarks (In File)",
          "type": "command",
          "command": "bookmarks.list",
          "when": "editorTextFocus"
        },
        {
          "key": "L",
          "name": "List Bookmarks (All Files)",
          "type": "command",
          "command": "bookmarks.listFromAllFiles",
          "when": "editorTextFocus"
        },
        {
          "key": "r",
          "name": "Refresh",
          "type": "command",
          "command": "bookmarks.refresh"
        },
        {
          "key": "c",
          "name": "Clear",
          "type": "command",
          "command": "bookmarks.clear"
        },
        {
          "key": "C",
          "name": "Clear (All Files)",
          "type": "command",
          "command": "bookmarks.clearFromAllFiles"
        },
        {
          "key": "s",
          "name": "Support",
          "type": "command",
          "command": "bookmarks.supportBookmarks"
        }
      ]
    },

    {
      "key": "-",
      "name": "──────────────────────────────"
    },
    {
      "key": "L",
      "name": "Problems/Troubles",
      "type": "bindings",
      "bindings": [
        {
          "key": "n",
          "type": "command",
          "name": "Next Problem",
          "command": "editor.action.marker.next"
        },
        {
          "key": "p",
          "type": "command",
          "name": "Previous Problem",
          "command": "editor.action.marker.prev"
        },
        {
          "key": "q",
          "type": "command",
          "name": "Quick Fix",
          "command": "editor.action.quickFix"
        }
      ]
    },

    {
      "key": "d",
      "name": "Debug",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart ebug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },

    {
      "key": "g",
      "name": "Git",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "B",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "C",
          "name": "Cherry Pick",
          "type": "command",
          "command": "gitlens.views.cherryPick"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "F",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "g",
          "name": "Graph",
          "type": "command",
          "command": "git-graph.view"
        },
        {
          "key": "h",
          "name": "Heatmap",
          "type": "command",
          "command": "gitlens.toggleFileHeatmap"
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Pull",
          "type": "command",
          "command": "git.pull"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "l",
      "name": "LSP",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "a",
          "name": "Auto Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.goToImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "o",
          "name": "Outline",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "R",
          "name": "Rename (Var, function, etc...)",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "v",
          "name": "View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        }
      ]
    },
    {
      "key": "p",
      "name": "Peek",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.peekDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.peekDeclaration"
        },
        {
          "key": "p",
          "name": "Toggle Focus",
          "type": "command",
          "command": "togglePeekWidgetFocus",
          "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "t",
          "name": "Type Definition",
          "type": "command",
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    {
      "key": "-",
      "name": "──────────────────────────────"
    },
    {
      "key": "C",
      "name": "Custom CSS and JS Loader",
      "type": "bindings",
      "bindings": [
        {
          "key": "r",
          "name": "Reload",
          "type": "command",
          "command": "extension.updateCustomCSS"
        }
      ]
    },
    {
      "key": "s",
      "name": "Settings",
      "type": "bindings",
      "bindings": [
        {
          "key": "o",
          "name": "Open Settings (UI)",
          "type": "command",
          "command": "workbench.action.openSettings"
        },
        {
          "key": "j",
          "name": "Open Settings (JSON)",
          "type": "command",
          "command": "workbench.action.openSettingsJson"
        },
        {
          "key": "c",
          "name": "Open Keybindings (UI)",
          "type": "command",
          "command": "workbench.action.openGlobalKeybindings"
        },
        {
          "key": "k",
          "name": "Open Keybindings (JSON)",
          "type": "command",
          "command": "workbench.action.openGlobalKeybindingsFile"
        },
        {
          "key": "t",
          "name": "Select Color Theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "-",
          "name": "----------------------------------------------"
        },
        {
          "key": "i",
          "name": "Toggle Icon Theme",
          "type": "command",
          "command": "workbench.action.selectIconTheme"
        },
        {
          "key": "e",
          "name": "Toggle Editor Minimap",
          "type": "command",
          "command": "editor.action.toggleMinimap"
        },
        {
          "key": "l",
          "name": "Toggle Line Numbers",
          "type": "command",
          "command": "workbench.action.toggleRenderLineNumbers"
        },
        {
          "key": "r",
          "name": "Reload Window",
          "type": "command",
          "command": "workbench.action.reloadWindow"
        },
        {
          "key": "p",
          "name": "Open Command Palette",
          "type": "command",
          "command": "workbench.action.showCommands"
        }
      ]
    }
  ],

  // --------------------------------------
  //  ryuta46.multi-command
  // --------------------------------------
  "multiCommand.commands": [
    {
      "command": "multiCommand.runGitLog",
      "sequence": [
        "workbench.action.terminal.focus",
        "workbench.action.terminal.new",
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": { "text": "git log --oneline\n" }
        }
      ]
    }
  ],

  // To improve performance
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },

  // --------------------------------------
  //  WORKBENCH COLOR CUSTOM
  // --------------------------------------
  "workbench.colorCustomizations": {
    "editorGutter.modifiedBackground": "#FFA500",
    "editorGutter.addedBackground": "#00FF00",
    "editorGutter.deletedBackground": "#FF0000",
    "statusBar.background": "#E52020",
    "statusBar.noFolderBackground": "#E52020",
    "statusBar.debuggingBackground": "#E52020",
    "statusBar.foreground": "#FFFFFF",
    "statusBar.debuggingForeground": "#FFFFFF",
    "activityBar.activeBackground": "#2a73aa",
    "activityBar.background": "#2a73aa",
    "activityBar.foreground": "#e7e7e7",
    "activityBar.inactiveForeground": "#e7e7e799",
    "activityBarBadge.background": "#661945",
    "activityBarBadge.foreground": "#e7e7e7",
    "commandCenter.border": "#e7e7e799",
    "sash.hoverBorder": "#2a73aa",
    "titleBar.activeBackground": "#205781",
    "titleBar.activeForeground": "#e7e7e7",
    "titleBar.inactiveBackground": "#20578199",
    "titleBar.inactiveForeground": "#e7e7e799"
  },
  "window.commandCenter": false,
  "workbench.productIconTheme": "developer-icons",
  "settingsSync.ignoredExtensions": []
}
